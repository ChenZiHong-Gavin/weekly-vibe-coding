name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'apps/dice-verse/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd apps/dice-verse
        npm ci
        
    - name: Build dice-verse
      env:
        VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
        VITE_LLM_API_URL: ${{ secrets.VITE_LLM_API_URL }}
        VITE_LLM_MODEL: ${{ secrets.VITE_LLM_MODEL }}
      run: |
        cd apps/dice-verse
        npm run build

    - name: Install dependencies
      run: |
        cd apps/spin-art
        npm ci

    - name: Build spin-art
      run: |
        cd apps/spin-art
        npm run build

    - name: Install dependencies
      run: |
        cd apps/snap-puzzle
        npm ci

    - name: Build snap-puzzle
      run: |
        cd apps/snap-puzzle
        npm run build
    
    - name: Build danmaku-magic
        run: |
        cd apps/danmaku-magic
        npm run build
    
    - name: Copy all builds to dist
      run: |
        mkdir -p dist/{dice-verse,spin-art,snap-puzzle,danmaku-magic}
        cp -r apps/dice-verse/dist/* dist/dice-verse/
        cp -r apps/spin-art/dist/* dist/spin-art/
        cp -r apps/snap-puzzle/dist/* dist/snap-puzzle/
        cp -r apps/danmaku-magic/dist/* dist/danmaku-magic/
        cp index.html dist/
 
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4